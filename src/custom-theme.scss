@use '~@angular/material' as mat;

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/


// Mixin inclusion?
@import "./theme-mixin.scss";



// Going to produce my own palettes.

// Primary palette:
// Jade-themed.
$jade-palette:
(
  50: #e5f6ee,
  100: #c1e7d5,
  200: #98d8ba,
  300: #6bcaa0,
  400: #46be8c,
  500: #09b278,
  600: #00a36d,
  700: #00915f,
  800: #007f53,
  900: #005f3d,

  contrast: (
    50: rgba(black, 0.87),
    100: rgba(black, 0.87),
    200: rgba(black, 0.87),
    300: rgba(black, 0.87),
    400: rgba(black, 0.87),
    500: rgba(black, 0.87),
    600: rgba(black, 0.87),
    700: rgba(black, 0.87),
    800: rgba(white, 0.87),
    900: rgba(white, 0.87),
  )
);



// Default / Light-theme palettes.
$mock-light-primary: mat.define-palette(mat.$light-green-palette,0);

// $mock-accent: mat.define-palette($jade-palette,600);
$mock-accent: mat.define-palette(mat.$light-green-palette);
// Note that there is a bug involving Angular Material Dialogue where
// opening the dialogue once in light theme makes opening the dialogue
// in dark theme not have dark background.

$mock-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for
// individual theming systems such as "color" or "typography".
$mock-light-theme: mat.define-light-theme((
  color: (
    primary: $mock-light-primary,
    accent: $mock-accent,
    warn: $mock-warn,
  )
));


// Dark-theme palette(s).
$mock-dark-primary: mat.define-palette(mat.$grey-palette,900);

// Create the dark-theme.
$mock-dark-theme: mat.define-dark-theme((
  color: (
    primary: $mock-dark-primary,
    accent: $mock-accent,
    warn: $mock-warn,
  )
));



// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($mock-light-theme);

// Include the mixin I made?
@include theme-colours($mock-light-theme);


// Dark theme stuff:
.dark-theme
{
  @include mat.all-component-themes($mock-dark-theme);
  @include theme-colours($mock-dark-theme);
}


// Light theme setup:
.light-theme
{
  @include mat.all-component-themes($mock-light-theme);
  @include theme-colours($mock-light-theme);
}
